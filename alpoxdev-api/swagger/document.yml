openapi: '3.0.0'
info:
    version: '0.0.1'
    title: 'ALPOXDEV API'
    description: ''
servers:
    - url: 'https://api.alpox.dev'
      variables:
          stage:
              default: prod
              enum:
                  - dev
                  - prod

tags:
    - name: 'auth'
      description: '사용자 정보'

    - name: 'post'
      description: '블로그 글'

    - name: 'tag'
      description: '블로그 태그'

paths:
    '/auth/login':
        post:
            summary: '로그인'
            tags:
                - auth
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: string
                                    example: test@test.com
                                password:
                                    type: string
                                    example: testtest123!
            responses:
                200:
                    description: return access token
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    accessToken:
                                        type: string
                                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiMjU4OWRhYmMtYzQzYy00NDgxLTg2YWItYjU0ODg4MjUxYWExIiwiZW1haWwiOiJ0ZXN0QGdtYWlsLmNvbSIsIm5hbWUiOiJzbWsiLCJ0aHVtYm5haWwiOm51bGwsInJvbGUiOiJ1c2VyIn0sImlhdCI6MTYwMDk1NzAzMSwiZXhwIjoxNjAxMDQzNDMxfQ.yEmHy_lumzz-LJHnADrBMDeE43UzmKvZZvgiQRHlW5k
                                    user:
                                        type: object
                                        $ref: '#/components/schemas/User'
    '/auth/register':
        post:
            summary: '회원가입'
            tags:
                - auth
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    example: test@test.com
                                password:
                                    type: string
                                    example: testtest123!
                                nickname:
                                    type: string
                                    example: test
            responses:
                201:
                    description: return access token
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    accessToken:
                                        type: string
                                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiMjU4OWRhYmMtYzQzYy00NDgxLTg2YWItYjU0ODg4MjUxYWExIiwiZW1haWwiOiJ0ZXN0QGdtYWlsLmNvbSIsIm5hbWUiOiJzbWsiLCJ0aHVtYm5haWwiOm51bGwsInJvbGUiOiJ1c2VyIn0sImlhdCI6MTYwMDk1NzAzMSwiZXhwIjoxNjAxMDQzNDMxfQ.yEmHy_lumzz-LJHnADrBMDeE43UzmKvZZvgiQRHlW5k
                                    user:
                                        type: object
                                        $ref: '#/components/schemas/User'
    '/posts':
        get:
            summary: '블로그 글 목록'
            tags:
                - post
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                      default: 0
                - in: query
                  name: offset
                  schema:
                      type: integer
                      default: 20
                - in: query
                  name: email
                  schema:
                      type: string
                      default: alpoxdev@gmail.com
            responses:
                200:
                    description: success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    posts:
                                        type: array
                                        items:
                                            type: object
                                            $ref: '#/components/schemas/Post'
        post:
            summary: '블로그 글 생성'
            tags:
                - post
            security:
                - bearerAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            $ref: '#/components/schemas/Post'
            responses:
                201:
                    description: 'success'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    post:
                                        type: object
                                        $ref: '#/components/schemas/Post'
                401:
                    description: authorization failure

    '/posts/{id}':
        get:
            summary: '블로그 글 자세히'
            tags:
                - post
            parameters:
                - name: id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                200:
                    description: success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    post:
                                        type: object
                                        $ref: '#/components/schemas/Post'
                404:
                    description: not found post
        delete:
            summary: '블로그 글 삭제'
            tags:
                - post
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                204:
                    description: success
                401:
                    description: authorization failure
                404:
                    description: not found post
        patch:
            summary: '블로그 글 수정'
            tags:
                - post
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            $ref: '#/components/schemas/Post'
            responses:
                204:
                    description: success
                401:
                    description: authorization failure
                404:
                    description: not found post
    '/tags':
        get:
            summary: '블로그 태그 목록'
            tags:
                - tag
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                      default: 0
                - in: query
                  name: offset
                  schema:
                      type: integer
                      default: 20
            responses:
                200:
                    description: success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    tags:
                                        type: array
                                        items:
                                            type: object
                                            $ref: '#/components/schemas/Tag'
                                    count:
                                        type: integer
                                        format: int64
    '/tags/{id}':
        get:
            summary: '블로그 태그 자세히 불러오기'
            tags:
                - tag
            parameters:
                - name: id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                200:
                    description: success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    tag:
                                        type: object
                                        $ref: '#/components/schemas/Tag'
        delete:
            summary: '블로그 태그 삭제하기'
            tags:
                - tag
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                204:
                    description: success
        patch:
            summary: '블로그 태그 수정하기'
            tags:
                - tag
            parameters:
                - name: id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: integer
                      format: int64
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            $ref: '#/components/schemas/Tag'
            responses:
                204:
                    description: success

security:
    - bearerAuth: []

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                email:
                    type: string
                nickname:
                    type: string
                role:
                    type: string
                    enum: ['user', 'member', 'admin']
                    default: 'user'
                profile:
                    type: string
                hash:
                    type: string
                salt:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        Post:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                title:
                    type: string
                thumbnail:
                    type: string
                content:
                    type: string
                tags:
                    type: array
                    items:
                        type: object
                        $ref: '#/components/schemas/Tag'
                createdAt:
                    type: string
                    format: date-time
                deletedAt:
                    type: string
                    format: date-time
        Tag:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                tag:
                    type: string
                description:
                    type: string
